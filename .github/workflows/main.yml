name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go-version: [1.23.2]
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            goos: linux
          - os: windows-latest
            goos: windows
          - os: macos-latest
            goos: darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    - name: Extract version
      id: extract_version
      run: |
        VERSION=$(grep -oP 'const Version = "\K[^"]+' internal/version.go)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build (Unix)
      if: runner.os != 'Windows'
      run: |
        mkdir -p bin/${{ matrix.goos }}-${{ matrix.arch }}
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.arch }} go build -o bin/${{ matrix.goos }}-${{ matrix.arch }}/AstralBot

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir -p bin\${{ matrix.goos }}-${{ matrix.arch }}
        set GOOS=${{ matrix.goos }}
        set GOARCH=${{ matrix.arch }}
        go build -o bin\${{ matrix.goos }}-${{ matrix.arch }}\AstralBot.exe

    - name: Zip build artifacts (Unix)
      if: runner.os != 'Windows'
      run: |
        zip -r bin/${{ matrix.goos }}-${{ matrix.arch }}/AstralBot.zip bin/${{ matrix.goos }}-${{ matrix.arch }}/AstralBot

    - name: Zip build artifacts (Windows)
      if: runner.os == 'Windows'
      run: |
        powershell Compress-Archive -Path bin\${{ matrix.goos }}-${{ matrix.arch }}\AstralBot.exe -DestinationPath bin\${{ matrix.goos }}-${{ matrix.arch }}\AstralBot.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: AstralBot-${{ matrix.goos }}-${{ matrix.arch }}
        path: bin/${{ matrix.goos }}-${{ matrix.arch }}/AstralBot.zip